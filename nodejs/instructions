## Initialise Arduino
Connect uC with Sensor(Accelerometer/LDR)
Connect uC(Arduino) to Host Processor (Laptop/RPi/Beaglebone), PowerSupply
Check /dev/ttyACM* communication port location of the arduino on the host processor
Verify serve.js points to the correct com port found from above step 
Start Arduino IDE
Upload specontrol.ino(or arduino sketch of choice) to arduino board

## Initialise Server
  + Install Node.js
  + Run =| node install |= to install packages listed in package.json
  + Start Node Server using =| node serve.js |

## Visualise Output
  + Open *.html in web browser of choice to see data
                        OR
  + Add this web application folder to the location of the web directory
  + Start Web Server
	[/opt/lampp/lampp start]	# XAMPP
	[/etc/init.d/nginx start]	# UBUNTU
	[systemctl start nginx]		# ARCH
  + Open Desired Web Browser: Firefox/Chrome...
  + Type in Address Bar: localhost(http://localhost)[Check OK]

Web Developement [ ~=| spectrometer |=~=| specontrol.ino |=~=| serve.js |=~=| index.html |=~ ]
+ Edit Contents in the Source Folder
 + Reload Page on Web Browser[http://localhost OR *.html]
			OR
 + Open Terminal
 + cd /dir/to/source/folder [Navigate to Website Folder]
 + gedit /file/to/edit
 + Reload Page on Web Browser[http://localhost OR *.html]
			OR
 + Use GitHub for Version Control, Code Distribution and Collaborative Editing
 + Clone Online Directory to /your/choice/of/local/working/directory
 + Edit pages in offline directory
 + Test by reloading page on Web Browser[http://localhost OR *.html]
 + Upload to Git Repository, if Working

Debugging
+ In server.js edit io.set('log level', 0); -> io.set('log level', 1) & debug=false -> debug=true
+ In Browser Web. Open File>Web Developers>Web Console & Reload/Open Page to see warnings and errors
+ See whether port no serve.js & client (index.html) communicating over is correct
+ If "io not defined" error in Web Development of Firefox. Check if # node server.js # running, socketio serving data

Git Basics
1. mkdir /path/to/working/folder
2. git clone /url/of/required/source/code
3. git add /file(s)/to/stage | To Stage Files [Edited/Added Files]
4. git commit -m "Commit Message" | Commits in Local Repo [Saves Source Current State]
5. git remote myfork https://path/to/your/repo/fork
6. git push myfork master OR git push myfork branch
5. submit pull request
